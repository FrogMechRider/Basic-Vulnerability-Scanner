import socket
import requests
from bs4 import BeautifulSoup

def scan_ports(target, ports):
    print(f"Scanning {target} for open ports...")
    open_ports = []
    for port in ports:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(0.1)
        result = sock.connect_ex((target, port))
        if result == 0:
            open_ports.append(port)
        sock.close()
    return open_ports

def check_for_vulnerabilities(url):
    print(f"Checking {url} for common vulnerabilities...")
    vulnerabilities = []

    try:
        # Check for outdated server software
        response = requests.get(url)
        server_header = response.headers.get('server')
        if server_header:
            if "Apache/2.2" in server_header or "nginx/1.4" in server_header:
                vulnerabilities.append("Outdated server software detected")
    
        # Check for exposed admin panels
        admin_panel_paths = ['/admin', '/admin.php', '/admin.html']
        for path in admin_panel_paths:
            response = requests.get(url + path)
            if response.status_code == 200:
                vulnerabilities.append(f"Exposed admin panel found at {url + path}")
        
        # Check for basic SQL injection vulnerability
        sqli_payload = " ' OR '1'='1"
        sqli_test_url = url + "?id=" + sqli_payload
        sqli_response = requests.get(sqli_test_url)
        if "syntax" in sqli_response.text or "mysql" in sqli_response.text:
            vulnerabilities.append("Possible SQL injection vulnerability found")
    
        # Check for basic XSS vulnerability
        xss_payload = "<script>alert('XSS')</script>"
        xss_test_url = url + "?q=" + xss_payload
        xss_response = requests.get(xss_test_url)
        if xss_payload in xss_response.text:
            vulnerabilities.append("Possible XSS vulnerability found")
    except requests.exceptions.RequestException as e:
        print(f"Error checking {url}: {e}")

    return vulnerabilities

def main():
    target = input("Enter IP address or URL: ")

    if target.startswith("http"):
        vulnerabilities = check_for_vulnerabilities(target)
        if vulnerabilities:
            print("Vulnerabilities found:")
            for vulnerability in vulnerabilities:
                print(f" - {vulnerability}")
        else:
            print("No vulnerabilities found.")
        
    else:
        ports = range(1, 1024) 
        open_ports = scan_ports(target, ports)
        if open_ports:
            print("Open ports found:")
            for port in open_ports:
                print(f" - Port {port}")
        else:
            print("No open ports were found.")

if __name__ == "__main__":
    main()
